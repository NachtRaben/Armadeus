/*
 * This file is generated by jOOQ.
 */
package dev.armadeus.bot.database.core.tables.records;


import dev.armadeus.bot.database.core.tables.Instances;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InstancesRecord extends UpdatableRecordImpl<InstancesRecord> implements Record3<UUID, Boolean, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.instances.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.instances.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.instances.dev-mode</code>.
     */
    public void setDevMode(Boolean value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.instances.dev-mode</code>.
     */
    public Boolean getDevMode() {
        return (Boolean) get(1);
    }

    /**
     * Setter for <code>public.instances.updated</code>.
     */
    public void setUpdated(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.instances.updated</code>.
     */
    public Long getUpdated() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<UUID, Boolean, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<UUID, Boolean, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Instances.INSTANCES.ID;
    }

    @Override
    public Field<Boolean> field2() {
        return Instances.INSTANCES.DEV_MODE;
    }

    @Override
    public Field<Long> field3() {
        return Instances.INSTANCES.UPDATED;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public Boolean component2() {
        return getDevMode();
    }

    @Override
    public Long component3() {
        return getUpdated();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public Boolean value2() {
        return getDevMode();
    }

    @Override
    public Long value3() {
        return getUpdated();
    }

    @Override
    public InstancesRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public InstancesRecord value2(Boolean value) {
        setDevMode(value);
        return this;
    }

    @Override
    public InstancesRecord value3(Long value) {
        setUpdated(value);
        return this;
    }

    @Override
    public InstancesRecord values(UUID value1, Boolean value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InstancesRecord
     */
    public InstancesRecord() {
        super(Instances.INSTANCES);
    }

    /**
     * Create a detached, initialised InstancesRecord
     */
    public InstancesRecord(UUID id, Boolean devMode, Long updated) {
        super(Instances.INSTANCES);

        setId(id);
        setDevMode(devMode);
        setUpdated(updated);
    }
}
